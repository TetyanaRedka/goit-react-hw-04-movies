{"version":3,"sources":["servises/movies-api.js","components/MoviesList/MoviesList.js","components/MoviesPage/MoviesPage.js"],"names":["axios","defaults","baseURL","params","api_key","language","getTrendMovies","a","get","data","results","getMovieDetails","movieId","searchMovies","query","page","include_adult","getCast","cast","getReviews","propTypes","PropTypes","number","isRequired","string","withRouter","films","location","map","film","to","pathname","id","state","from","title","MoviesPage","movies","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","match","history","nextLocation","url","search","push","this","className","styles","container","onSubmit","type","onChange","length","Component"],"mappings":"0XAIAA,IAAMC,SAASC,QAAU,+BAEzB,IAAMC,EAAS,CACbC,QAAS,mCACTC,SAAU,SAYCC,EAAc,uCAAG,8BAAAC,EAAA,+EAEHP,IAAMQ,IAAI,sBAAuB,CAAEL,WAFhC,uBAElBM,EAFkB,EAElBA,KAFkB,kBAInBA,EAAKC,SAJc,oGAAH,qDAUdC,EAAe,uCAAG,WAAMC,GAAN,iBAAAL,EAAA,+EAEJP,IAAMQ,IAAN,iBAAoBI,GAAW,CAAET,WAF7B,uBAEnBM,EAFmB,EAEnBA,KAFmB,kBAIpBA,GAJoB,oGAAH,sDAUfI,EAAY,uCAAG,WAAMC,GAAN,iBAAAP,EAAA,+EAEDP,IAAMQ,IAAI,gBAAiB,CAAEL,OAAO,2BAAMA,GAAP,IAAeW,MAAOA,EAAOC,KAAM,EAAGC,eAAe,MAFvF,uBAEhBP,EAFgB,EAEhBA,KAFgB,kBAIjBA,EAAKC,SAJY,oGAAH,sDAUZO,EAAO,uCAAG,WAAML,GAAN,iBAAAL,EAAA,+EAEIP,IAAMQ,IAAN,iBAAoBI,EAApB,YAAuC,CAAET,WAF7C,uBAEXM,EAFW,EAEXA,KAFW,kBAIZA,EAAKS,MAJO,oGAAH,sDAUPC,EAAU,uCAAG,WAAMP,GAAN,iBAAAL,EAAA,+EAECP,IAAMQ,IAAN,iBAAoBI,EAApB,YAAuC,CAAET,WAF1C,uBAEdM,EAFc,EAEdA,KAFc,kBAIfA,EAAKC,SAJU,oGAAH,sDAUvBC,EAAgBS,UAAY,CAC1BR,QAASS,IAAUC,OAAOC,YAG5BV,EAAaO,UAAY,CACvBN,MAAOO,IAAUG,OAAOD,YAG1BN,EAAQG,UAAY,CAClBR,QAASS,IAAUC,OAAOC,YAG5BJ,EAAWC,UAAY,CACrBR,QAASS,IAAUC,OAAOC,a,gCCnF5B,8BA6BeE,iBAzBI,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC3B,OACE,6BACGD,EAAME,KAAI,SAAAC,GAAI,OACb,6BACE,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,WAAD,OAAaF,EAAKG,IAC1BC,MAAO,CACLC,KAAMP,IAJZ,SAQGE,EAAKM,SATDN,EAAKG,a,kJCFhBI,E,4MACJH,MAAQ,CACNxB,KAAM,GACN4B,OAAQ,I,EAGVC,aAAe,SAAAC,GACb,EAAKC,SAAS,CACZ/B,KAAM8B,EAAEE,cAAcC,S,EAI1BC,a,uCAAe,WAAMJ,GAAN,yBAAAhC,EAAA,6DACbgC,EAAEK,iBADW,EAEc,EAAKC,MAAxBC,EAFK,EAELA,MAAOC,EAFF,EAEEA,QACPtC,EAAS,EAAKwB,MAAdxB,KAHK,SAKQI,YAAaJ,GALrB,OAKP4B,EALO,OAOb,EAAKG,SAAS,CAAEH,WACVW,EAAe,CACnBjB,SAAUe,EAAMG,IAChBC,OAAO,UAAD,OAAYzC,IAGpBsC,EAAQI,KAAKH,GAbA,2C,kGAgBf,WAAU,IAAD,EACkBI,KAAKnB,MAAtBxB,EADD,EACCA,KAAM4B,EADP,EACOA,OACd,OACE,uBAAMgB,UAAWC,IAAOC,UAAxB,UACE,uBAAMC,SAAUJ,KAAKT,aAArB,UACE,uBAAOc,KAAK,OAAOf,MAAOjC,EAAMiD,SAAUN,KAAKd,eAC/C,wBAAQmB,KAAK,SAAb,uBAGDpB,EAAOsB,OAAS,GAAK,cAAC,IAAD,CAAYjC,MAAOW,W,GArCxBuB,aA2CVxB","file":"static/js/6.1e46cbe4.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\r\n\r\nconst params = {\r\n  api_key: 'c8e555b792369f2cdd4fa1e59af4be3e',\r\n  language: 'en-US',\r\n};\r\n\r\n// export const getGenres = async () => {\r\n//   try {\r\n//     const { data } = await axios.get('/genre/movie/list', { params });\r\n//     return data.genres;\r\n//   } catch (error) {\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\nexport const getTrendMovies = async () => {\r\n  try {\r\n    const { data } = await axios.get('/trending/movie/day', { params });\r\n\r\n    return data.results;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getMovieDetails = async movieId => {\r\n  try {\r\n    const { data } = await axios.get(`/movie/${movieId}`, { params });\r\n\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const searchMovies = async query => {\r\n  try {\r\n    const { data } = await axios.get('/search/movie', { params: { ...params, query: query, page: 1, include_adult: false } });\r\n\r\n    return data.results;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getCast = async movieId => {\r\n  try {\r\n    const { data } = await axios.get(`/movie/${movieId}/credits`, { params });\r\n\r\n    return data.cast;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getReviews = async movieId => {\r\n  try {\r\n    const { data } = await axios.get(`/movie/${movieId}/reviews`, { params });\r\n\r\n    return data.results;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\ngetMovieDetails.propTypes = {\r\n  movieId: PropTypes.number.isRequired,\r\n};\r\n\r\nsearchMovies.propTypes = {\r\n  query: PropTypes.string.isRequired,\r\n};\r\n\r\ngetCast.propTypes = {\r\n  movieId: PropTypes.number.isRequired,\r\n};\r\n\r\ngetReviews.propTypes = {\r\n  movieId: PropTypes.number.isRequired,\r\n};\r\n","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MoviesList = ({ films, location }) => {\r\n  return (\r\n    <ul>\r\n      {films.map(film => (\r\n        <li key={film.id}>\r\n          <Link\r\n            to={{\r\n              pathname: `/movies/${film.id}`,\r\n              state: {\r\n                from: location,\r\n              },\r\n            }}\r\n          >\r\n            {film.title}\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nMoviesList.propTypes = {\r\n  films: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nexport default withRouter(MoviesList);\r\n","import React, { Component } from 'react';\r\nimport MoviesList from '../MoviesList/MoviesList';\r\n\r\nimport { searchMovies } from '../../servises/movies-api';\r\nimport styles from '../Header/Header.module.css';\r\n\r\nclass MoviesPage extends Component {\r\n  state = {\r\n    data: '',\r\n    movies: [],\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      data: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const { match, history } = this.props;\r\n    const { data } = this.state;\r\n\r\n    const movies = await searchMovies(data);\r\n\r\n    this.setState({ movies });\r\n    const nextLocation = {\r\n      pathname: match.url,\r\n      search: `?query=${data}`,\r\n    };\r\n\r\n    history.push(nextLocation);\r\n  };\r\n\r\n  render() {\r\n    const { data, movies } = this.state;\r\n    return (\r\n      <main className={styles.container}>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input type=\"text\" value={data} onChange={this.handleChange} />\r\n          <button type=\"submit\">Search</button>\r\n        </form>\r\n\r\n        {movies.length > 0 && <MoviesList films={movies} />}\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesPage;\r\n"],"sourceRoot":""}