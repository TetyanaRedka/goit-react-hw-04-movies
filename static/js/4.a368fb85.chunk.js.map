{"version":3,"sources":["servises/movies-api.js","components/Cast/Cast.module.css","components/MovieDetailsPage/MovieDetailsPage.module.css","components/Cast/Cast.js","components/Reviews/Reviews.js","components/MovieDetailsPage/MovieDetailsPage.js"],"names":["axios","defaults","baseURL","params","api_key","language","getTrendMovies","a","get","data","results","getMovieDetails","movieId","searchMovies","query","page","include_adult","getCast","cast","getReviews","propTypes","PropTypes","number","isRequired","string","module","exports","Cast","state","this","props","match","setState","className","styles","actorList","map","role","actorCard","src","profile_path","alt","actorPhoto","name","character","id","Component","Reviews","reviews","length","review","author","content","MovieDetailsPage","homepage","title","overview","poster_path","release_date","genres","handleGoBack","history","location","push","from","movie","url","path","mainCard","type","onClick","mainImg","substr","genresList","genre","to","component"],"mappings":"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","file":"static/js/4.a368fb85.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\r\n\r\nconst params = {\r\n  api_key: 'c8e555b792369f2cdd4fa1e59af4be3e',\r\n  language: 'en-US',\r\n};\r\n\r\n// export const getGenres = async () => {\r\n//   try {\r\n//     const { data } = await axios.get('/genre/movie/list', { params });\r\n//     return data.genres;\r\n//   } catch (error) {\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\nexport const getTrendMovies = async () => {\r\n  try {\r\n    const { data } = await axios.get('/trending/movie/day', { params });\r\n\r\n    return data.results;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getMovieDetails = async movieId => {\r\n  try {\r\n    const { data } = await axios.get(`/movie/${movieId}`, { params });\r\n\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const searchMovies = async query => {\r\n  try {\r\n    const { data } = await axios.get('/search/movie', { params: { ...params, query: query, page: 1, include_adult: false } });\r\n\r\n    return data.results;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getCast = async movieId => {\r\n  try {\r\n    const { data } = await axios.get(`/movie/${movieId}/credits`, { params });\r\n\r\n    return data.cast;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getReviews = async movieId => {\r\n  try {\r\n    const { data } = await axios.get(`/movie/${movieId}/reviews`, { params });\r\n\r\n    return data.results;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\ngetMovieDetails.propTypes = {\r\n  movieId: PropTypes.number.isRequired,\r\n};\r\n\r\nsearchMovies.propTypes = {\r\n  query: PropTypes.string.isRequired,\r\n};\r\n\r\ngetCast.propTypes = {\r\n  movieId: PropTypes.number.isRequired,\r\n};\r\n\r\ngetReviews.propTypes = {\r\n  movieId: PropTypes.number.isRequired,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actorList\":\"Cast_actorList__qpCvq\",\"actorCard\":\"Cast_actorCard__1ZP99\",\"actorPhoto\":\"Cast_actorPhoto__3_Yl6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainCard\":\"MovieDetailsPage_mainCard__vPmUW\",\"mainImg\":\"MovieDetailsPage_mainImg__4mGdI\",\"genresList\":\"MovieDetailsPage_genresList__k15mg\",\"genres\":\"MovieDetailsPage_genres__1919E\"};","import React, { Component } from 'react';\r\n\r\nimport { getCast } from '../../servises/movies-api';\r\n\r\nimport styles from './Cast.module.css';\r\n\r\nclass Cast extends Component {\r\n  state = {\r\n    cast: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const movieId = this.props.match.params.movieId;\r\n\r\n    const cast = await getCast(movieId);\r\n\r\n    this.setState({ cast });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <ul className={styles.actorList}>\r\n          {this.state.cast.map(role => (\r\n            <li key={role.id} className={styles.actorCard}>\r\n              <img src={role.profile_path && `https://image.tmdb.org/t/p/w500/${role.profile_path}`} alt=\"\" className={styles.actorPhoto} />\r\n              <p>{role.name}</p>\r\n              <p>Character: {role.character}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cast;\r\n","import React, { Component } from 'react';\r\nimport { getReviews } from '../../servises/movies-api';\r\n// import styles from './Reviews.module.css';\r\n\r\nclass Reviews extends Component {\r\n  state = {\r\n    reviews: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const movieId = this.props.match.params.movieId;\r\n\r\n    const reviews = await getReviews(movieId);\r\n\r\n    this.setState({ reviews });\r\n  }\r\n\r\n  render() {\r\n    const { reviews } = this.state;\r\n\r\n    return (\r\n      <>\r\n        {reviews.length > 0 ? (\r\n          <ul>\r\n            {reviews.map(review => (\r\n              <li key={review.id}>\r\n                <h4>Author: {review.author}</h4>\r\n                <p>{review.content}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>We dont't have any reviews for this movie</p>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Reviews;\r\n","import React, { Component } from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\n\r\nimport Cast from '../Cast/Cast';\r\nimport Reviews from '../Reviews/Reviews';\r\n\r\nimport { getMovieDetails } from '../../servises/movies-api';\r\n\r\nimport styles from './MovieDetailsPage.module.css';\r\n\r\nclass MovieDetailsPage extends Component {\r\n  state = {\r\n    homepage: '',\r\n    id: '',\r\n    title: '',\r\n    overview: '',\r\n    poster_path: '',\r\n    release_date: '',\r\n    genres: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const movieId = this.props.match.params.movieId;\r\n\r\n    const movie = await getMovieDetails(movieId);\r\n\r\n    this.setState({ ...movie });\r\n  }\r\n\r\n  handleGoBack = () => {\r\n    const { history, location } = this.props;\r\n\r\n    history.push(location?.state?.from || this.props.history.push('/'));\r\n  };\r\n\r\n  render() {\r\n    const { url, path } = this.props.match;\r\n    const { title, overview, poster_path, release_date, genres } = this.state;\r\n    return (\r\n      <>\r\n        <div className={styles.mainCard}>\r\n          <div>\r\n            <button type=\"button\" onClick={this.handleGoBack}>\r\n              Go back\r\n            </button>\r\n            <img src={poster_path && `https://image.tmdb.org/t/p/w500/${poster_path}`} alt=\"\" className={styles.mainImg} />\r\n          </div>\r\n\r\n          <div>\r\n            {title && (\r\n              <h1>\r\n                {title} ({release_date.substr(0, 4)})\r\n              </h1>\r\n            )}\r\n            <h2>Overview: </h2> <span>{overview}</span>\r\n            <h2>Genres</h2>\r\n            <ul className={styles.genresList}>\r\n              {genres.length > 0 &&\r\n                genres.map(genre => (\r\n                  <li key={genre.id} className={styles.genres}>\r\n                    {genre.name}\r\n                  </li>\r\n                ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <h3>Additional information</h3>\r\n          <ul>\r\n            <li>\r\n              <Link to={`${url}/cast`}>Cast</Link>\r\n            </li>\r\n            <li>\r\n              <Link to={`${url}/reviews`}>Reviews</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div>\r\n          <Route path={`${path}/cast`} component={Cast} />\r\n          <Route path={`${path}/reviews`} component={Reviews} />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieDetailsPage;\r\n"],"sourceRoot":""}